package com.demo.entities;
// Generated Feb 25, 2024, 2:30:44 PM by Hibernate Tools 4.3.6.Final

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import jakarta.persistence.*;
import jakarta.persistence.criteria.Root;
import jakarta.persistence.criteria.Selection;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Hotel generated by hbm2java
 */
@Entity
@Table(name = "hotel", catalog = "managementhotel")
public class Hotel implements java.io.Serializable {

	private Integer idAccount;
	private Account account;

	
	private String name;
	private String cancellationPolicy;
	private String description;
	private Integer rating;
	private String manager;
	private Boolean status;
	private String mainPhoto;
	private String secondaryPhoto;
	private String papers;
	private String regulation;
	private Integer idHandler;
	private String address;
	private Set<Categoryimage> categoryimages = new HashSet<Categoryimage>(0);
	private Set<Evaluate> evaluates = new HashSet<Evaluate>(0);
	private Set<Room> rooms = new HashSet<Room>(0);
	private Set<ImagePapers> imagePaperses = new HashSet<ImagePapers>(0);

	public Hotel() {
	}

	public Hotel(Account account) {
		this.account = account;
	}

	public Hotel(Integer idAccount) {
		this.idAccount = idAccount;
	}

	public Hotel(Account account, String name, String cancellationPolicy, String description, Integer rating,
			String manager, Boolean status, String mainPhoto, String secondaryPhoto, String papers, String regulation,
			Integer idHandler, String address, Set<Categoryimage> categoryimages, Set<Evaluate> evaluates,
			Set<Room> rooms, Set<ImagePapers> imagePaperses) {
		this.account = account;
		this.name = name;
		this.cancellationPolicy = cancellationPolicy;
		this.description = description;
		this.rating = rating;
		this.manager = manager;
		this.status = status;
		this.mainPhoto = mainPhoto;
		this.secondaryPhoto = secondaryPhoto;
		this.papers = papers;
		this.regulation = regulation;
		this.idHandler = idHandler;
		this.address = address;
		this.categoryimages = categoryimages;
		this.evaluates = evaluates;
		this.rooms = rooms;
		this.imagePaperses = imagePaperses;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "account"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id_account", unique = true, nullable = false)
	public Integer getIdAccount() {
		return this.idAccount;
	}

	public void setIdAccount(Integer idAccount) {
		this.idAccount = idAccount;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@Column(name = "name", length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "cancellation_policy", length = 65535)
	public String getCancellationPolicy() {
		return this.cancellationPolicy;
	}

	public void setCancellationPolicy(String cancellationPolicy) {
		this.cancellationPolicy = cancellationPolicy;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "rating")
	public Integer getRating() {
		return this.rating;
	}

	public void setRating(Integer rating) {
		this.rating = rating;
	}

	@Column(name = "manager", length = 250)
	public String getManager() {
		return this.manager;
	}

	public void setManager(String manager) {
		this.manager = manager;
	}

	@Column(name = "status")
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}

	@Column(name = "main_photo", length = 250)
	public String getMainPhoto() {
		return this.mainPhoto;
	}

	public void setMainPhoto(String mainPhoto) {
		this.mainPhoto = mainPhoto;
	}

	@Column(name = "secondary_photo", length = 250)
	public String getSecondaryPhoto() {
		return this.secondaryPhoto;
	}

	public void setSecondaryPhoto(String secondaryPhoto) {
		this.secondaryPhoto = secondaryPhoto;
	}

	@Column(name = "papers", length = 65535)
	public String getPapers() {
		return this.papers;
	}

	public void setPapers(String papers) {
		this.papers = papers;
	}

	@Column(name = "regulation", length = 250)
	public String getRegulation() {
		return this.regulation;
	}

	public void setRegulation(String regulation) {
		this.regulation = regulation;
	}

	@Column(name = "idHandler")
	public Integer getIdHandler() {
		return this.idHandler;
	}

	public void setIdHandler(Integer idHandler) {
		this.idHandler = idHandler;
	}

	@Column(name = "address", length = 250)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<Categoryimage> getCategoryimages() {
		return this.categoryimages;
	}

	public void setCategoryimages(Set<Categoryimage> categoryimages) {
		this.categoryimages = categoryimages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<Evaluate> getEvaluates() {
		return this.evaluates;
	}

	public void setEvaluates(Set<Evaluate> evaluates) {
		this.evaluates = evaluates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<Room> getRooms() {
		return this.rooms;
	}

	public void setRooms(Set<Room> rooms) {
		this.rooms = rooms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hotel")
	public Set<ImagePapers> getImagePaperses() {
		return this.imagePaperses;
	}

	public void setImagePaperses(Set<ImagePapers> imagePaperses) {
		this.imagePaperses = imagePaperses;
	}

	public static List<Selection<?>> selection(Root<Hotel> root) {

		List<Selection<?>> selection = new ArrayList<>();
		selection.add(root.get("idAccount").alias("idAccount"));
		selection.add(root.get("name").alias("name"));
		selection.add(root.get("cancellationPolicy").alias("cancellationPolicy"));
		selection.add(root.get("description").alias("description"));
		selection.add(root.get("rating").alias("rating"));
		selection.add(root.get("manager").alias("manager"));
		selection.add(root.get("status").alias("status"));
		selection.add(root.get("mainPhoto").alias("mainPhoto"));
		selection.add(root.get("secondaryPhoto").alias("secondaryPhoto"));
		selection.add(root.get("papers").alias("papers"));
		selection.add(root.get("regulation").alias("regulation"));
		selection.add(root.get("idHandler").alias("idHandler"));
		selection.add(root.get("address").alias("address"));
		return selection;
	}

}
